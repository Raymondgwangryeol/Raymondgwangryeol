using System;
using System.Text;

namespace Basic
{
    class Stirng_04
    {
        static void Main(string[] args)
        {
            //C#문자열은 한 번 값이 입력 되면 바꿀 수 없음.
            //string 변수 s = "aa"에서 s="ab"로 바꾸면 똑같은 주소 값이 바뀌는게 아니라 아예 새로운 곳에 다시 만들어 버림

            //string을 문자 배열로 변환하는 방법
            string str = "Hello";
            char[] s_to_c = str.ToCharArray(); //ToCharArray 사용
            for (int i = 0; i < s_to_c.Length; i++) System.Console.Write(s_to_c[i]);

            Console.WriteLine();

            //문자 배열을 string으로 변환
            char[] Ch_Arr = { 'A', 'B', 'C' };
            string c_to_s =  new string(Ch_Arr); //new string 사용
            Console.WriteLine(c_to_s);

            //string은 c#에서 immutable하기 때문에, 문자열 갱신이 많은 곳에서 사용되기 좋지 않음.
            //그래서 mutable 타입인 StingBuilder 클래스를 사용.
            //별도 메모리 생성, 소멸하지 않고 일정한 버퍼를 가지고 갱신을 효율적으로!
            //특히, 루프 안에서 계속 문자열을 추가 변경하는 코드에서 써야 함.
            
            //필요 헤더 System.Text
            StringBuilder sb = new StringBuilder();
            for (int i = 1; i <= 5; i++)
            {
                sb.Append(i.ToString()); // .Append로 문자열에 추가
                sb.Append(System.Environment.NewLine); //줄 바꿈 문자열 가져와서 붙이기
            }
            Console.Write(sb);



        }
    }
}
