/*
  * Event *
    클래스 내에 특정한 일(event)가 일어남을 외부의 이벤트 가입자(Subscriber)들에게 알려주는 기능.
    event 키워드 사용, 필드(내부 데이터)처럼 취급됨.

   * Event Handler *
    이벤트 발생 시 어떤 명령들을 실행할 지 지정
    +=는 이벤트 추가, -=는 이벤트 제거
    하나의 이벤트에 여러개의 이벤트 핸들러 추가 가능.
    이벤트가 발생되면 추가된 이벤트 핸들러들을 모두 차례로 호출.
 */

using System;

namespace Basic
{
    class Event_14
    {
        // 클래스 내의 이벤트 정의
        class MyButton
        {
            public string Text;
            // 이벤트 정의
            public event EventHandler Click;

            public void MouseButtonDown()
            {
                if (this.Click != null)
                {
                    // 이벤트핸들러들을 호출
                    Click(this, EventArgs.Empty); // this = 이벤트 핸들러 지정할 메소드. EventArgs는 Empty로
                }
            }
        }

        // 이벤트 사용
        public void Run()
        {
            MyButton btn = new MyButton();
            // Click 이벤트에 대한 이벤트핸들러로
            // btn_Click 이라는 메서드를 지정함
            btn.Click += new EventHandler(btn_Click);
            btn.Text = "Run";
            //....
        }

        void btn_Click(object sender, EventArgs e)
        {
            // MessageBox.Show("Button 클릭");
        }

        /*
         event에서 add, remove 사용 가능
         click 이벤트 안에 있는 내부 리스트에 (InvocationList, _click.GetInvocationList()를 사용해서 리스트를 얻을 수 있다)
         value 델리게이트를 추가하거나 삭제하는 기능
         여러 개의 델리게이트를 가지고 순서대로 호출하는 것을 멀티캐스트(Multicast) 델리게이트라 함.
         델리게이트는 멀티캐스트를 디폴트로 함.


            class MyButton
            {
                // 이벤트 정의하는 다른 방법
                private EventHandler _click; // 이벤트 핸들러 담을 변수
                public event EventHandler Click //event 선언
                {
                    add
                    {
                        _click += value;
                        // _click = value;   // 싱글캐스트
                    }
                    remove
                    {
                        _click -= value;
                    }
                }

                public void MouseButtonDown()
                {
                    if (this._click != null)
                    {
                        // 이벤트핸들러들을 호출
                        _click(this, EventArgs.Empty);                                
                    }
                }

               // 속성 정의
                private string _name;
                public string Name 
                {
                    get
                    {
                        return _name;
                    }
                    set
                    {
                        _name = value;
                    }
                }
  
    }
         */

        static void Main(string[] args)
        {

        }
    }
}


// this는 확장 메서드의 첫 번째 매개 변수에 대한 한정자로도 사용됩니다.
